---
type Metric = { label: string; value: string };
type Item = {
  company: string;
  role?: string;
  location?: string;
  range: string;
  points: string[];
  tags?: string[];
  metrics?: Metric[];
  logo?: string;
};

const { items = [] } = Astro.props as { items: Item[] };

const initials = (name: string) =>
  name
    .split(/\s+/)
    .filter(Boolean)
    .slice(0, 2)
    .map((w) => w[0]?.toUpperCase() ?? "")
    .join("") || "•";
---

<ol class="timeline space-y-8 reveal" data-reveal>
  {items.map((item) => (
    <li class="timeline-item">
      <div class="card p-5">
        <!-- Header -->
        <div class="flex flex-wrap items-center justify-between gap-3">
          <div class="flex items-start gap-3">
            {item.logo ? (
              <img
                src={item.logo}
                alt=""
                class="size-9 rounded-md object-contain ring-1 ring-white/10"
                loading="lazy"
                decoding="async"
              />
            ) : (
              <div
                class="size-9 rounded-md grid place-items-center text-[11px] font-bold tracking-[.02em] text-slate-900 ring-1 ring-white/30 shadow-[inset_0_1px_0_rgba(255,255,255,.45)]"
                style="background: radial-gradient(140% 140% at 10% 10%, #a7f3d0 0%, #22d3ee 55%, #67e8f9 100%);"
                aria-hidden="true"
              >
                {initials(item.company)}
              </div>
            )}

            <div>
              <h3 class="text-lg font-semibold">{item.company}</h3>
              <p class="text-sm opacity-80">
                {item.role ? <span>{item.role}</span> : null}
                {item.location ? <span> • {item.location}</span> : null}
              </p>
            </div>
          </div>

          <span class="text-sm opacity-80">{item.range}</span>
        </div>

        {item.tags && item.tags.length ? (
          <div class="mt-3 flex flex-wrap gap-2">
            {item.tags.map((t) => <span class="tag">{t}</span>)}
          </div>
        ) : null}

        <ul class="mt-4 list-disc ps-5 space-y-1.5 text-sm/6 opacity-90">
          {item.points.map((p) => <li>{p}</li>)}
        </ul>

        {item.metrics && item.metrics.length ? (
          <dl class="mt-4 grid grid-cols-2 gap-4 text-sm">
            {item.metrics.map((m) => (
              <>
                <dt class="opacity-70">{m.label}</dt>
                <dd class="font-medium">{m.value}</dd>
              </>
            ))}
          </dl>
        ) : null}
      </div>
    </li>
  ))}
</ol>
 